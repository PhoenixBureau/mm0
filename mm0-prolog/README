So far so good, we can parse examples\hello.mm0 into a list of statement
thingies.

Welcome to SWI-Prolog (threaded, 64 bits, version 8.1.4-33-gf5970a6e0)
SWI-Prolog comes with ABSOLUTELY NO WARRANTY. This is free software.
Please run ?- license. for legal details.


3 ?- do.
delimiter(' ( ) ').
sort(hex, [strict, free]).
term(x0, [], [hex]).
term(x1, [], [hex]).
term(x2, [], [hex]).
term(x3, [], [hex]).
term(x4, [], [hex]).
term(x5, [], [hex]).
term(x6, [], [hex]).
term(x7, [], [hex]).
term(x8, [], [hex]).
term(x9, [], [hex]).
term(xa, [], [hex]).
term(xb, [], [hex]).
term(xc, [], [hex]).
term(xd, [], [hex]).
term(xe, [], [hex]).
term(xf, [], [hex]).
sort(char, [strict, free]).
term(ch, [], [hex]>([hex]>[char])).
sort(string, [strict, free]).
term(s0, [], [string]).
term(s1, [], [char]>[string]).
term(sadd, [], [string]>([string]>[string])).
infixr(sadd, +, 50).
def(nl, [], [string], ' s1 (ch x0 xa) ').
def('__', [], [string], ' s1 (ch x2 x0) ').
def(bang, [], [string], ' s1 (ch x2 x1) ').
prefix(bang, '_!', max).
def('_H', [], [string], ' s1 (ch x4 x8) ').
def('_W', [], [string], ' s1 (ch x5 x7) ').
def('_d', [], [string], ' s1 (ch x6 x4) ').
def('_e', [], [string], ' s1 (ch x6 x5) ').
def('_l', [], [string], ' s1 (ch x6 xc) ').
def('_o', [], [string], ' s1 (ch x6 xf) ').
def('_r', [], [string], ' s1 (ch x7 x2) ').
output(string, [mstr(' _H + _e + _l + _l + _o + __ +\n                 _W + _o + _r + _l + _d + _! + nl ')]).
true.
